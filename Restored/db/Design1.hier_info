|game
clk50 => checking_Second_Move.CLK
clk50 => piece_Moved.CLK
clk50 => s_Addr_W[0].CLK
clk50 => s_Addr_W[1].CLK
clk50 => s_Addr_W[2].CLK
clk50 => s_Addr_W[3].CLK
clk50 => s_Addr_W[4].CLK
clk50 => s_Addr_W[5].CLK
clk50 => counter[0].CLK
clk50 => counter[1].CLK
clk50 => counter[2].CLK
clk50 => counter[3].CLK
clk50 => while_Capturing.CLK
clk50 => pos_To_Capture_Y[0].CLK
clk50 => pos_To_Capture_Y[1].CLK
clk50 => pos_To_Capture_Y[2].CLK
clk50 => pos_To_Capture_X[0].CLK
clk50 => pos_To_Capture_X[1].CLK
clk50 => pos_To_Capture_X[2].CLK
clk50 => sel_Selected.CLK
clk50 => arriving_Cell[0].CLK
clk50 => arriving_Cell[1].CLK
clk50 => arriving_Cell[2].CLK
clk50 => piece_To_Capture[0].CLK
clk50 => piece_To_Capture[1].CLK
clk50 => piece_To_Capture[2].CLK
clk50 => piece_To_Move[0].CLK
clk50 => piece_To_Move[1].CLK
clk50 => piece_To_Move[2].CLK
clk50 => last_Piece[0].CLK
clk50 => last_Piece[1].CLK
clk50 => last_Piece[2].CLK
clk50 => to_Move_Y[0].CLK
clk50 => to_Move_Y[1].CLK
clk50 => to_Move_Y[2].CLK
clk50 => to_Move_X[0].CLK
clk50 => to_Move_X[1].CLK
clk50 => to_Move_X[2].CLK
clk50 => old_Y[0].CLK
clk50 => old_Y[1].CLK
clk50 => old_Y[2].CLK
clk50 => old_X[0].CLK
clk50 => old_X[1].CLK
clk50 => old_X[2].CLK
clk50 => sel_Y[0].CLK
clk50 => sel_Y[1].CLK
clk50 => sel_Y[2].CLK
clk50 => sel_X[0].CLK
clk50 => sel_X[1].CLK
clk50 => sel_X[2].CLK
clk50 => s_whites.CLK
clk50 => int_Pos_To_Capture_Y[0].CLK
clk50 => int_Pos_To_Capture_Y[1].CLK
clk50 => int_Pos_To_Capture_Y[2].CLK
clk50 => int_Pos_To_Capture_X[0].CLK
clk50 => int_Pos_To_Capture_X[1].CLK
clk50 => int_Pos_To_Capture_X[2].CLK
clk50 => state~16.DATAIN
nrst => state~18.DATAIN
nrst => checking_Second_Move.ENA
nrst => int_Pos_To_Capture_X[2].ENA
nrst => int_Pos_To_Capture_X[1].ENA
nrst => int_Pos_To_Capture_X[0].ENA
nrst => int_Pos_To_Capture_Y[2].ENA
nrst => int_Pos_To_Capture_Y[1].ENA
nrst => int_Pos_To_Capture_Y[0].ENA
nrst => s_whites.ENA
nrst => sel_X[2].ENA
nrst => sel_X[1].ENA
nrst => sel_X[0].ENA
nrst => sel_Y[2].ENA
nrst => sel_Y[1].ENA
nrst => sel_Y[0].ENA
nrst => old_X[2].ENA
nrst => old_X[1].ENA
nrst => old_X[0].ENA
nrst => old_Y[2].ENA
nrst => old_Y[1].ENA
nrst => old_Y[0].ENA
nrst => to_Move_X[2].ENA
nrst => to_Move_X[1].ENA
nrst => to_Move_X[0].ENA
nrst => to_Move_Y[2].ENA
nrst => to_Move_Y[1].ENA
nrst => to_Move_Y[0].ENA
nrst => last_Piece[2].ENA
nrst => last_Piece[1].ENA
nrst => last_Piece[0].ENA
nrst => piece_To_Move[2].ENA
nrst => piece_To_Move[1].ENA
nrst => piece_To_Move[0].ENA
nrst => piece_To_Capture[2].ENA
nrst => piece_To_Capture[1].ENA
nrst => piece_To_Capture[0].ENA
nrst => arriving_Cell[2].ENA
nrst => arriving_Cell[1].ENA
nrst => arriving_Cell[0].ENA
nrst => sel_Selected.ENA
nrst => pos_To_Capture_X[2].ENA
nrst => pos_To_Capture_X[1].ENA
nrst => pos_To_Capture_X[0].ENA
nrst => pos_To_Capture_Y[2].ENA
nrst => pos_To_Capture_Y[1].ENA
nrst => pos_To_Capture_Y[0].ENA
nrst => while_Capturing.ENA
nrst => counter[3].ENA
nrst => counter[2].ENA
nrst => counter[1].ENA
nrst => counter[0].ENA
nrst => s_Addr_W[5].ENA
nrst => s_Addr_W[4].ENA
nrst => s_Addr_W[3].ENA
nrst => s_Addr_W[2].ENA
nrst => s_Addr_W[1].ENA
nrst => s_Addr_W[0].ENA
nrst => piece_Moved.ENA
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
New_Game => state.OUTPUTSELECT
Sel => old_X.OUTPUTSELECT
Sel => old_X.OUTPUTSELECT
Sel => old_X.OUTPUTSELECT
Sel => old_Y.OUTPUTSELECT
Sel => old_Y.OUTPUTSELECT
Sel => old_Y.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => state.OUTPUTSELECT
Sel => to_Move_X.OUTPUTSELECT
Sel => to_Move_X.OUTPUTSELECT
Sel => to_Move_X.OUTPUTSELECT
Sel => to_Move_Y.OUTPUTSELECT
Sel => to_Move_Y.OUTPUTSELECT
Sel => to_Move_Y.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
RDY_RECEIVED => state.OUTPUTSELECT
GR_RECEIVED => ~NO_FANOUT~
EQ_RECEIVED => ~NO_FANOUT~
SM_RECEIVED => ~NO_FANOUT~
DT_RECEIVED => ~NO_FANOUT~
Pos_X[0] => sel_X.DATAB
Pos_X[1] => sel_X.DATAB
Pos_X[2] => sel_X.DATAB
Pos_Y[0] => sel_Y.DATAB
Pos_Y[1] => sel_Y.DATAB
Pos_Y[2] => sel_Y.DATAB
In_Piece[0] => Equal0.IN2
In_Piece[0] => piece_To_Move.DATAB
In_Piece[0] => piece_To_Capture.DATAB
In_Piece[0] => arriving_Cell.DATAA
In_Piece[0] => last_Piece.DATAB
In_Piece[1] => Equal0.IN1
In_Piece[1] => piece_To_Move.DATAB
In_Piece[1] => piece_To_Capture.DATAB
In_Piece[1] => arriving_Cell.DATAA
In_Piece[1] => last_Piece.DATAB
In_Piece[2] => Equal0.IN0
In_Piece[2] => piece_To_Move.DATAB
In_Piece[2] => piece_To_Capture.DATAB
In_Piece[2] => arriving_Cell.DATAA
In_Piece[2] => last_Piece.DATAB
bank_ready => ~NO_FANOUT~
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
ready_to_TX => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Turn => state.OUTPUTSELECT
Color => s_whites.OUTPUTSELECT
SEND_RDY <= SEND_RDY.DB_MAX_OUTPUT_PORT_TYPE
SEND_GR <= SEND_GR.DB_MAX_OUTPUT_PORT_TYPE
SEND_EQ <= SEND_EQ.DB_MAX_OUTPUT_PORT_TYPE
SEND_SM <= SEND_SM.DB_MAX_OUTPUT_PORT_TYPE
SEND_DT <= SEND_DT.DB_MAX_OUTPUT_PORT_TYPE
frame_received <= <VCC>
enterCode <= comb.DB_MAX_OUTPUT_PORT_TYPE
led_turn <= led_turn.DB_MAX_OUTPUT_PORT_TYPE
turn_read <= turn_read.DB_MAX_OUTPUT_PORT_TYPE
freeze_kb <= freeze_kb.DB_MAX_OUTPUT_PORT_TYPE
Addr_W[0] <= Addr_W[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
Addr_W[1] <= Addr_W[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
Addr_W[2] <= Addr_W[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
Addr_W[3] <= Addr_W[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
Addr_W[4] <= Addr_W[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
Addr_W[5] <= Addr_W[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
Addr_R[0] <= Addr_R[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
Addr_R[1] <= Addr_R[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
Addr_R[2] <= Addr_R[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
Addr_R[3] <= Addr_R[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
Addr_R[4] <= Addr_R[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
Addr_R[5] <= Addr_R[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
X_To_Sent[0] <= X_To_Sent[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
X_To_Sent[1] <= X_To_Sent[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
X_To_Sent[2] <= X_To_Sent[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
Y_To_Sent[0] <= Y_To_Sent[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
Y_To_Sent[1] <= Y_To_Sent[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
Y_To_Sent[2] <= Y_To_Sent[2]$latch.DB_MAX_OUTPUT_PORT_TYPE


