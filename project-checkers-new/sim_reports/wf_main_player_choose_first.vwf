/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

USER_TYPE("|Main|state")
{
	VALUES = "state.S_Wait", "state.S_Start", "state.S_You_Chose_White", "state.S_You_Chose_Black", "state.S_Send_White";
}

USER_TYPE("__state")
{
	VALUES = "Undefined", "state.S_Wait", "state.S_Start", "state.S_P_First", "state.S_Ready_Game", "state.S_New_Game", "state.S_Wait_Turn", "state.S_You_Chose_White", "state.S_Send_White", "state.S_Change_Turn", "state.S_Op_First";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nrst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Colour")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dt_rx")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("frame3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("frame_read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hash")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Main_wr_addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Main_wr_piece")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ON_LED")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rdy_rx")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SEND_rdy")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SEND_whites")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Turn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WEN_Main")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("White_LED")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("whites")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("whites_rx")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "__state";
}

SIGNAL("rdy_rx_int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("nrst")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 250.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 270.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 180.0;
	}
}

TRANSITION_LIST("Colour")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 718.784;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1.216;
	}
}

TRANSITION_LIST("dt_rx")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("frame3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("frame_read")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("hash")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
	}
}

TRANSITION_LIST("Main_wr_addr")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Main_wr_piece")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ON_LED")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 37.014;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 2.986;
	}
}

TRANSITION_LIST("rdy_rx")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 90.0;
	}
}

TRANSITION_LIST("SEND_rdy")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 78.3;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 101.7;
	}
}

TRANSITION_LIST("SEND_whites")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 656.462;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 43.538;
	}
}

TRANSITION_LIST("Turn")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 737.004;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 2.996;
	}
}

TRANSITION_LIST("WEN_Main")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("White_LED")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 737.237;
		LEVEL 1 FOR 69.967;
		LEVEL 0 FOR 190.033;
		LEVEL 1 FOR 2.763;
	}
}

TRANSITION_LIST("whites")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
	}
}

TRANSITION_LIST("whites_rx")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 130.0;
	}
}

TRANSITION_LIST("state")
{
	NODE
	{
		REPEAT = 1;
		LEVEL state.S_Wait FOR 72.915;
		LEVEL state.S_Start FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.S_P_First FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.S_Ready_Game FOR 80.0;
		LEVEL state.S_New_Game FOR 20.0;
		LEVEL state.S_Wait_Turn FOR 19.967;
		LEVEL state.S_Wait FOR 100.033;
		LEVEL state.S_Start FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.S_P_First FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.S_Ready_Game FOR 60.0;
		LEVEL state.S_New_Game FOR 20.0;
		LEVEL state.S_Wait_Turn FOR 49.967;
		LEVEL state.S_Wait FOR 90.033;
		LEVEL state.S_Start FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.S_P_First FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.S_You_Chose_White FOR 20.0;
		LEVEL state.S_Send_White FOR 20.0;
		LEVEL state.S_Ready_Game FOR 40.0;
		LEVEL state.S_New_Game FOR 20.0;
		LEVEL state.S_Change_Turn FOR 20.0;
		LEVEL state.S_Wait_Turn FOR 49.967;
		LEVEL state.S_Wait FOR 70.033;
		LEVEL state.S_Start FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.S_P_First FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.S_You_Chose_White FOR 20.0;
		LEVEL state.S_Send_White FOR 20.0;
		LEVEL state.S_Ready_Game FOR 20.0;
		LEVEL state.S_New_Game FOR 20.0;
		LEVEL state.S_Change_Turn FOR 7.085;
	}
}

TRANSITION_LIST("rdy_rx_int")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 172.915;
		LEVEL 1 FOR 59.967;
		LEVEL 0 FOR 180.033;
		LEVEL 1 FOR 89.967;
		LEVEL 0 FOR 190.033;
		LEVEL 1 FOR 109.967;
		LEVEL 0 FOR 110.033;
		LEVEL 1 FOR 87.085;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hash";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdy_rx";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SEND_rdy";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nrst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "whites";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Colour";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dt_rx";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "frame3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "frame_read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Main_wr_addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Main_wr_piece";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SEND_whites";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Turn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "WEN_Main";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "White_LED";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "whites_rx";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ON_LED";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rdy_rx_int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 220000;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 490000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 780000;
	MASTER = FALSE;
}
;
