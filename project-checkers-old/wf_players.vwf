/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000000.0;
	SIMULATION_TIME = 15000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

USER_TYPE("|bloc_2|sender_ram:player_2|rx_module2:inst3|state")
{
	VALUES = "state.rx_idle", "state.rx_start", "state.rx_shift", "state.rx_stop";
}

USER_TYPE("|bloc_2|sender_ram:player_2|protocol_rx:inst5|state")
{
	VALUES = "state.pr_ini", "state.pr_w1", "state.pr_r1", "state.pr_w2", "state.pr_r2", "state.pr_f_type", "state.pr_s_rdy", "state.pr_s_wh", "state.pr_w3", "state.pr_r3", "state.pr_w4", "state.pr_r4", "state.pr_w5", "state.pr_r5", "state.pr_s_dt", "state.pr_s_dt_init";
}

USER_TYPE("|bloc_2|sender_ram:player_2|Main:inst8|state")
{
	VALUES = "state.S_Wait", "state.S_Start", "state.S_Op_First", "state.S_P_First", "state.S_You_Chose_White", "state.S_Send_White", "state.S_Ready_Game", "state.S_New_Game", "state.S_Change_Turn", "state.S_Wait_Turn", "state.S_Write_RAM", "state.S_Write_Ends";
}

USER_TYPE("|bloc_2|sender_ram:player_2|Game:inst1|state")
{
	VALUES = "state.S_Wait", "state.S_New_Game", "state.S_Wait_Turn", "state.S_Turn", "state.S_Turn_2", "state.S_Move_White", "state.S_Move_Black", "state.S_Check", "state.S_Wait_Check", "state.S_Verify", "state.S_Place_Figure", "state.S_End_Turn", "state.S_Pre_Send", "state.S_Send_1", "state.S_Send_2", "state.S_Send_3", "state.S_Send_End", "state.S_Tx_1", "state.S_Tx_2", "state.S_Tx_End";
}

USER_TYPE("|bloc_2|sender_ram:player_2|protocol_tx:inst4|state")
{
	VALUES = "state.pr_wait", "state.pr_rdy", "state.pr_dt1", "state.pr_dt2", "state.pr_dt3", "state.pr_wh", "state.pr_s1", "state.pr_w1", "state.pr_s2", "state.pr_w2", "state.pr_check_data", "state.pr_s3", "state.pr_w3", "state.pr_s4", "state.pr_w4", "state.pr_s5", "state.pr_w5", "state.pr_set_TX";
}

USER_TYPE("|bloc_2|sender_ram:player_2|tx_module:inst2|state")
{
	VALUES = "state.tx_idle", "state.tx_start", "state.tx_shift", "state.tx_stop";
}

USER_TYPE("|bloc_2|sender_ram:player_1|rx_module2:inst3|state")
{
	VALUES = "state.rx_idle", "state.rx_start", "state.rx_shift", "state.rx_stop";
}

USER_TYPE("|bloc_2|sender_ram:player_1|protocol_rx:inst5|state")
{
	VALUES = "state.pr_ini", "state.pr_w1", "state.pr_r1", "state.pr_w2", "state.pr_r2", "state.pr_f_type", "state.pr_s_rdy", "state.pr_s_wh", "state.pr_w3", "state.pr_r3", "state.pr_w4", "state.pr_r4", "state.pr_w5", "state.pr_r5", "state.pr_s_dt", "state.pr_s_dt_init";
}

USER_TYPE("|bloc_2|sender_ram:player_1|Main:inst8|state")
{
	VALUES = "state.S_Wait", "state.S_Start", "state.S_Op_First", "state.S_P_First", "state.S_You_Chose_White", "state.S_Send_White", "state.S_Ready_Game", "state.S_New_Game", "state.S_Change_Turn", "state.S_Wait_Turn", "state.S_Write_RAM", "state.S_Write_Ends";
}

USER_TYPE("|bloc_2|sender_ram:player_1|Game:inst1|state")
{
	VALUES = "state.S_Wait", "state.S_New_Game", "state.S_Wait_Turn", "state.S_Turn", "state.S_Turn_2", "state.S_Move_White", "state.S_Move_Black", "state.S_Check", "state.S_Wait_Check", "state.S_Verify", "state.S_Place_Figure", "state.S_End_Turn", "state.S_Pre_Send", "state.S_Send_1", "state.S_Send_2", "state.S_Send_3", "state.S_Send_End", "state.S_Tx_1", "state.S_Tx_2", "state.S_Tx_End";
}

USER_TYPE("|bloc_2|sender_ram:player_1|protocol_tx:inst4|state")
{
	VALUES = "state.pr_wait", "state.pr_rdy", "state.pr_dt1", "state.pr_dt2", "state.pr_dt3", "state.pr_wh", "state.pr_s1", "state.pr_w1", "state.pr_s2", "state.pr_w2", "state.pr_check_data", "state.pr_s3", "state.pr_w3", "state.pr_s4", "state.pr_w4", "state.pr_s5", "state.pr_w5", "state.pr_set_TX";
}

USER_TYPE("|bloc_2|sender_ram:player_1|tx_module:inst2|state")
{
	VALUES = "state.tx_idle", "state.tx_start", "state.tx_shift", "state.tx_stop";
}

USER_TYPE("__sender_ram:player_1|Game:inst1|state")
{
	VALUES = "Undefined", "state.S_Wait", "state.S_New_Game", "state.S_Turn";
}

USER_TYPE("__sender_ram:player_1|tx_module:inst2|state")
{
	VALUES = "Undefined", "state.tx_idle", "state.tx_start", "state.tx_shift", "state.tx_stop";
}

USER_TYPE("__sender_ram:player_1|rx_module2:inst3|state")
{
	VALUES = "Undefined", "state.rx_idle", "state.rx_start", "state.rx_shift", "state.rx_stop";
}

USER_TYPE("__sender_ram:player_1|protocol_tx:inst4|state")
{
	VALUES = "Undefined", "state.pr_wait", "state.pr_rdy", "state.pr_s1", "state.pr_w1", "state.pr_s2", "state.pr_w2", "state.pr_check_data", "state.pr_set_TX", "state.pr_wh";
}

USER_TYPE("__sender_ram:player_1|protocol_rx:inst5|state")
{
	VALUES = "Undefined", "state.pr_ini", "state.pr_w1", "state.pr_r1", "state.pr_w2", "state.pr_r2", "state.pr_f_type", "state.pr_s_rdy", "state.pr_s_wh";
}

USER_TYPE("__sender_ram:player_1|Main:inst8|state")
{
	VALUES = "Undefined", "state.S_Wait", "state.S_Start", "state.S_P_First", "state.S_Ready_Game", "state.S_You_Chose_White", "state.S_Send_White", "state.S_New_Game", "state.S_Change_Turn", "state.S_Wait_Turn";
}

USER_TYPE("__sender_ram:player_2|Game:inst1|state")
{
	VALUES = "Undefined", "state.S_Wait", "state.S_New_Game", "state.S_Turn";
}

USER_TYPE("__sender_ram:player_2|tx_module:inst2|state")
{
	VALUES = "Undefined", "state.tx_idle", "state.tx_start", "state.tx_shift", "state.tx_stop";
}

USER_TYPE("__sender_ram:player_2|rx_module2:inst3|state")
{
	VALUES = "Undefined", "state.rx_idle", "state.rx_start", "state.rx_shift", "state.rx_stop";
}

USER_TYPE("__sender_ram:player_2|protocol_tx:inst4|state")
{
	VALUES = "Undefined", "state.pr_wait", "state.pr_rdy", "state.pr_s1", "state.pr_w1", "state.pr_s2", "state.pr_w2", "state.pr_check_data", "state.pr_set_TX", "state.pr_wh";
}

USER_TYPE("__sender_ram:player_2|protocol_rx:inst5|state")
{
	VALUES = "Undefined", "state.pr_ini", "state.pr_w1", "state.pr_r1", "state.pr_w2", "state.pr_r2", "state.pr_f_type", "state.pr_s_rdy", "state.pr_s_wh";
}

USER_TYPE("__sender_ram:player_2|Main:inst8|state")
{
	VALUES = "Undefined", "state.S_Wait", "state.S_Start", "state.S_Op_First", "state.S_Ready_Game", "state.S_New_Game", "state.S_Change_Turn", "state.S_Wait_Turn", "state.S_P_First", "state.S_You_Chose_White", "state.S_Send_White";
}

SIGNAL("divider 505")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("hash1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hash2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("key1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("key2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("keycode1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("keycode1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode1";
}

SIGNAL("keycode1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode1";
}

SIGNAL("keycode1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode1";
}

SIGNAL("keycode1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode1";
}

SIGNAL("keycode2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("keycode2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode2";
}

SIGNAL("keycode2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode2";
}

SIGNAL("keycode2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode2";
}

SIGNAL("keycode2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode2";
}

SIGNAL("nrst1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("serial1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("serial2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Turn1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Turn2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sender_ram:player_1|Game:inst1|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_1|Game:inst1|state";
}

SIGNAL("sender_ram:player_1|tx_module:inst2|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_1|tx_module:inst2|state";
}

SIGNAL("sender_ram:player_1|rx_module2:inst3|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_1|rx_module2:inst3|state";
}

SIGNAL("sender_ram:player_1|protocol_tx:inst4|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_1|protocol_tx:inst4|state";
}

SIGNAL("sender_ram:player_1|protocol_rx:inst5|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_1|protocol_rx:inst5|state";
}

SIGNAL("sender_ram:player_1|Main:inst8|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_1|Main:inst8|state";
}

SIGNAL("sender_ram:player_2|Game:inst1|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_2|Game:inst1|state";
}

SIGNAL("sender_ram:player_2|tx_module:inst2|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_2|tx_module:inst2|state";
}

SIGNAL("sender_ram:player_2|rx_module2:inst3|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_2|rx_module2:inst3|state";
}

SIGNAL("sender_ram:player_2|protocol_tx:inst4|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_2|protocol_tx:inst4|state";
}

SIGNAL("sender_ram:player_2|protocol_rx:inst5|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_2|protocol_rx:inst5|state";
}

SIGNAL("sender_ram:player_2|Main:inst8|state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|bloc_2|sender_ram:player_2|Main:inst8|state";
}

SIGNAL("divider 499")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sender_ram:player_2|protocol_rx:inst5|RDY_RECEIVED")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("sender_ram:player_2|protocol_rx:inst5|state.pr_s_rdy")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("sender_ram:player_1|Game:inst1|SelMode")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("sender_ram:player_2|Game:inst1|SelMode")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("divider 2450")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sender_ram:player_1|protocol_rx:inst5|WHITES_RECEIVED")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("sender_ram:player_2|protocol_rx:inst5|WHITES_RECEIVED")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

TRANSITION_LIST("clk1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5000000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("hash1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3217.586;
		LEVEL 1 FOR 69.267;
		LEVEL 0 FOR 11713.147;
	}
}

TRANSITION_LIST("hash2")
{
	NODE
	{
		REPEAT = 1;
			LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("key1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 99996720.0;
	}
}

TRANSITION_LIST("key2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000000.0;
	}
}

TRANSITION_LIST("keycode1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3200.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 99996720.0;
	}
}

TRANSITION_LIST("keycode1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3200.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 99996720.0;
	}
}

TRANSITION_LIST("keycode1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3200.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 99996720.0;
	}
}

TRANSITION_LIST("keycode1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 99996720.0;
	}
}

TRANSITION_LIST("keycode2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000000.0;
	}
}

TRANSITION_LIST("keycode2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000000.0;
	}
}

TRANSITION_LIST("keycode2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000000.0;
	}
}

TRANSITION_LIST("keycode2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000000.0;
	}
}

TRANSITION_LIST("nrst1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 99999960.0;
	}
}

TRANSITION_LIST("serial1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 278.445;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 200.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 100.0;
				LEVEL 0 FOR 100.0;
			}
			LEVEL 1 FOR 260.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 640.0;
		}
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 61.555;
	}
}

TRANSITION_LIST("serial2")
{
	NODE
	{
		REPEAT = 1;
			LEVEL 1 FOR 15000.0;
	}
}

TRANSITION_LIST("Turn1")
{
	NODE
	{
		REPEAT = 1;
			LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("Turn2")
{
	NODE
	{
		REPEAT = 1;
			LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_1|Game:inst1|state")
{
	NODE
	{
		REPEAT = 1;
			LEVEL state.S_Wait FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_1|tx_module:inst2|state")
{
	NODE
	{
		REPEAT = 1;
		LEVEL state.tx_idle FOR 252.939;
		NODE
		{
			REPEAT = 6;
			LEVEL state.tx_start FOR 100.0;
			LEVEL state.tx_shift FOR 800.0;
			LEVEL state.tx_stop FOR 100.0;
			LEVEL state.tx_idle FOR 60.0;
			LEVEL state.tx_start FOR 100.0;
			LEVEL state.tx_shift FOR 800.0;
			LEVEL state.tx_stop FOR 100.0;
			LEVEL state.tx_idle FOR 140.0;
		}
		LEVEL state.tx_start FOR 100.0;
		LEVEL state.tx_shift FOR 800.0;
		LEVEL state.tx_stop FOR 100.0;
		LEVEL state.tx_idle FOR 60.0;
		LEVEL state.tx_start FOR 100.0;
		LEVEL state.tx_shift FOR 387.061;
	}
}

TRANSITION_LIST("sender_ram:player_1|rx_module2:inst3|state")
{
	NODE
	{
		REPEAT = 1;
			LEVEL state.rx_idle FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_1|protocol_tx:inst4|state")
{
	NODE
	{
		REPEAT = 1;
		LEVEL state.pr_wait FOR 212.93;
		LEVEL Undefined FOR 0.006;
		LEVEL state.pr_wh FOR 19.994;
		LEVEL state.pr_s1 FOR 20.0;
		LEVEL Undefined FOR 0.01;
		LEVEL state.pr_w1 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_s2 FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_w2 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_check_data FOR 19.996;
		LEVEL Undefined FOR 0.003;
		LEVEL state.pr_set_TX FOR 19.997;
		LEVEL state.pr_wait FOR 19.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.pr_wh FOR 19.994;
		LEVEL state.pr_s1 FOR 20.0;
		LEVEL Undefined FOR 0.01;
		LEVEL state.pr_w1 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_s2 FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_w2 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_check_data FOR 19.996;
		LEVEL Undefined FOR 0.003;
		LEVEL state.pr_set_TX FOR 19.997;
		LEVEL state.pr_wait FOR 19.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.pr_wh FOR 19.994;
		LEVEL state.pr_s1 FOR 20.0;
		LEVEL Undefined FOR 0.01;
		LEVEL state.pr_w1 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_s2 FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_w2 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_check_data FOR 19.996;
		LEVEL Undefined FOR 0.003;
		LEVEL state.pr_set_TX FOR 19.997;
		LEVEL state.pr_wait FOR 19.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.pr_wh FOR 19.994;
		LEVEL state.pr_s1 FOR 20.0;
		LEVEL Undefined FOR 0.01;
		LEVEL state.pr_w1 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_s2 FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_w2 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_check_data FOR 19.996;
		LEVEL Undefined FOR 0.003;
		LEVEL state.pr_set_TX FOR 19.997;
		LEVEL state.pr_wait FOR 19.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.pr_wh FOR 19.994;
		LEVEL state.pr_s1 FOR 20.0;
		LEVEL Undefined FOR 0.01;
		LEVEL state.pr_w1 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_s2 FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_w2 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_check_data FOR 19.996;
		LEVEL Undefined FOR 0.003;
		LEVEL state.pr_set_TX FOR 19.997;
		LEVEL state.pr_wait FOR 19.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.pr_wh FOR 19.994;
		LEVEL state.pr_s1 FOR 20.0;
		LEVEL Undefined FOR 0.01;
		LEVEL state.pr_w1 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_s2 FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_w2 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_check_data FOR 19.996;
		LEVEL Undefined FOR 0.003;
		LEVEL state.pr_set_TX FOR 19.997;
		LEVEL state.pr_wait FOR 19.994;
		LEVEL Undefined FOR 0.006;
		LEVEL state.pr_wh FOR 19.994;
		LEVEL state.pr_s1 FOR 20.0;
		LEVEL Undefined FOR 0.01;
		LEVEL state.pr_w1 FOR 1039.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_s2 FOR 19.999;
		LEVEL Undefined FOR 0.001;
		LEVEL state.pr_w2 FOR 487.06;
	}
}

TRANSITION_LIST("sender_ram:player_1|protocol_rx:inst5|state")
{
	NODE
	{
		REPEAT = 1;
				LEVEL state.pr_ini FOR 52.922;
		LEVEL state.pr_w1 FOR 14947.078;
	}
}

TRANSITION_LIST("sender_ram:player_1|Main:inst8|state")
{
	NODE
	{
		REPEAT = 1;
			LEVEL state.S_Wait FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_2|Game:inst1|state")
{
	NODE
	{
		REPEAT = 1;
			LEVEL state.S_Wait FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_2|tx_module:inst2|state")
{
	NODE
	{
		REPEAT = 1;
			LEVEL state.tx_idle FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_2|rx_module2:inst3|state")
{
	NODE
	{
		REPEAT = 1;
		LEVEL state.rx_idle FOR 292.929;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 119.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 199.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 119.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 199.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 119.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 199.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 119.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 199.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 119.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 199.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 119.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 199.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 800.0;
		LEVEL state.rx_stop FOR 100.0;
		LEVEL state.rx_idle FOR 119.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_start FOR 39.998;
		LEVEL Undefined FOR 0.002;
		LEVEL state.rx_shift FOR 407.069;
	}
}

TRANSITION_LIST("sender_ram:player_2|protocol_tx:inst4|state")
{
	NODE
	{
		REPEAT = 1;
			LEVEL state.pr_wait FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_2|protocol_rx:inst5|state")
{
	NODE
	{
		REPEAT = 1;
		LEVEL state.pr_ini FOR 52.934;
		LEVEL state.pr_w1 FOR 1200.0;
		NODE
		{
			REPEAT = 6;
			LEVEL state.pr_r1 FOR 20.0;
			LEVEL state.pr_w2 FOR 1040.0;
			LEVEL state.pr_r2 FOR 19.997;
			LEVEL Undefined FOR 0.003;
			LEVEL state.pr_f_type FOR 19.997;
			LEVEL Undefined FOR 0.003;
			LEVEL state.pr_s_wh FOR 20.0;
			LEVEL state.pr_ini FOR 20.0;
			LEVEL state.pr_w1 FOR 1060.0;
		}
		LEVEL state.pr_r1 FOR 20.0;
		LEVEL state.pr_w2 FOR 527.066;
	}
}

TRANSITION_LIST("sender_ram:player_2|Main:inst8|state")
{
	NODE
	{
		REPEAT = 1;
			LEVEL state.S_Wait FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_2|protocol_rx:inst5|RDY_RECEIVED")
{
	NODE
	{
		REPEAT = 1;
			LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_2|protocol_rx:inst5|state.pr_s_rdy")
{
	NODE
	{
		REPEAT = 1;
			LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_1|Game:inst1|SelMode")
{
	NODE
	{
		REPEAT = 1;
			LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_2|Game:inst1|SelMode")
{
	NODE
	{
		REPEAT = 1;
			LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_1|protocol_rx:inst5|WHITES_RECEIVED")
{
	NODE
	{
		REPEAT = 1;
			LEVEL 0 FOR 15000.0;
	}
}

TRANSITION_LIST("sender_ram:player_2|protocol_rx:inst5|WHITES_RECEIVED")
{
	NODE
	{
		REPEAT = 1;
				LEVEL 0 FOR 2372.934;
		LEVEL 1 FOR 12627.066;
	}
}

DISPLAY_LINE
{
	CHANNEL = "serial1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "serial2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nrst1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Turn1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hash1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "key1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "keycode1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "keycode1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "keycode1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "keycode1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "keycode1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "divider 505";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "key2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "keycode2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "keycode2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "keycode2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "keycode2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "keycode2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "hash2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Turn2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_1|Game:inst1|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_1|tx_module:inst2|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_1|rx_module2:inst3|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_1|protocol_tx:inst4|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_1|protocol_rx:inst5|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_1|Main:inst8|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "divider 2450";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_1|Game:inst1|SelMode";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_2|Game:inst1|SelMode";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "divider 499";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_2|Game:inst1|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_2|tx_module:inst2|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_2|rx_module2:inst3|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_2|protocol_tx:inst4|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_2|protocol_rx:inst5|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_2|Main:inst8|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_2|protocol_rx:inst5|state.pr_s_rdy";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_2|protocol_rx:inst5|RDY_RECEIVED";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_1|protocol_rx:inst5|WHITES_RECEIVED";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sender_ram:player_2|protocol_rx:inst5|WHITES_RECEIVED";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
